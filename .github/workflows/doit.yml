name: do it

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "33 18 * * *"
  workflow_dispatch:

env:
  KAGGLE_KERNELS_PRIVATE: "no"
  PYTHON_VERSION: "3.11"

permissions:
  contents: read

concurrency:
  group: ${{ github.head_ref || github.run_id }}-${{ github.actor || github.repository_owner }}
  cancel-in-progress: ${{ (github.event_name == 'push' && github.base_ref == 'main' || github.event_name == 'schedule') && github.actor == github.repository_owner }}

jobs:
  doit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"

      - name: Cache pip dependencies
        if: ${{ !startsWith('graal', env.PYTHON_VERSION) && github.actor == github.repository_owner }}
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ env.PYTHON_VERSION }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.PYTHON_VERSION }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest

          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --select=E,F --show-source --statistics
          # Exit on syntax errors and undefined names
          exit 0  # Treats all errors as warnings (consider a stricter exit code)


      - name: Lint another time with flake8
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests
        if: false
        run: |
          pytest

      - name: Login to Kaggle
        if: ${{ github.actor == github.repository_owner }}
        uses: osbm/kaggle-login@v2.3
        with:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME || github.repository_owner }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}

      - name: Run app
        if: ${{ github.actor == github.repository_owner }}
        run: |
          echo "- kaggle kernels download process" >> $GITHUB_STEP_SUMMARY
          python main.py
          echo "- kaggle kernels downloaded" > $GITHUB_STEP_SUMMARY

      - name: ReZip kernels
        if: ${{ github.actor == github.repository_owner }}
        run: |
          if [ -z "${{ secrets.ARCHIVE_PASSWORD }}" ]; then
            echo "ARCHIVE_PASSWORD secret is not set"
            echo "- ARCHIVE_PASSWORD secret is not set" >> $GITHUB_STEP_SUMMARY
            exit 0
          fi
          mkdir -p tmp
          7z x kernels.zip -otmp
          echo "- kernels.7z creation" > $GITHUB_STEP_SUMMARY
          7z a -t7z -mx=9 -p"${{ secrets.ARCHIVE_PASSWORD }}" kernels.7z tmp/*
          echo "archive_created=true" >> $GITHUB_ENV
          echo "- kernels.7z has been created" > $GITHUB_STEP_SUMMARY
          rm -rf tmp || :

      - name: Upload Archive Artifact
        uses: actions/upload-artifact@v4
        if: ${{ env.archive_created == 'true' }}
        with:
          name: kernels
          path: kernels.7z
          if-no-files-found: error
          retention-days: 90

      - if: ${{ github.actor == github.repository_owner }}
        run: |
          if [ -z "${{ secrets.SSH_DEPLOY_KEY }}" ]; then
            echo "- SSH_DEPLOY_KEY secret is not set" >> $GITHUB_STEP_SUMMARY
            exit 0
          fi
          
          if [ -z "${{ env.DESTINATION_REPOSITORY_NAME }}" ]; then
            if [ -z "${{ secrets.DESTINATION_REPOSITORY_NAME }}" ]; then
              echo "DESTINATION_REPOSITORY_NAME secret is not set"
            else
              export DESTINATION_REPOSITORY_NAME="${{ secrets.DESTINATION_REPOSITORY_NAME }}"
              echo "DESTINATION_REPOSITORY_NAME set from secrets"
            fi
          fi
          
          if [ -z "${{ env.DESTINATION_REPOSITORY_USERNAME }}" ]; then
            if [ -z "${{ secrets.DESTINATION_REPOSITORY_USERNAME }}" ]; then
              export DESTINATION_REPOSITORY_USERNAME="${{ github.actor }}"
              echo "DESTINATION_REPOSITORY_USERNAME set from github.actor"
            else
              export DESTINATION_REPOSITORY_USERNAME="${{ secrets.DESTINATION_REPOSITORY_USERNAME }}"
              echo "DESTINATION_REPOSITORY_USERNAME set from secrets"
            fi
          fi
          
          if [ -z "$DESTINATION_REPOSITORY_NAME" ]; then
            echo "DESTINATION_REPOSITORY_NAME is not set"
            echo "- DESTINATION_REPOSITORY_NAME is not set" >> $GITHUB_STEP_SUMMARY
            exit 0
          fi
          
          echo "DESTINATION_REPOSITORY_NAME=$DESTINATION_REPOSITORY_NAME" >> $GITHUB_ENV
          echo "DESTINATION_REPOSITORY_USERNAME=$DESTINATION_REPOSITORY_USERNAME" >> $GITHUB_ENV
          
          rm -rf tmp || :
          mkdir -p tmp
          echo "- Extract archive" >> $GITHUB_STEP_SUMMARY
          
          7z x kernels.zip -otmp
          
          echo "DEPLOY_TO_REPOSITORY=true" >> $GITHUB_ENV
          echo "- DEPLOY_TO_REPOSITORY prepared" >> $GITHUB_STEP_SUMMARY

      - name: Push kernels directory to another repository
        uses: cpina/github-action-push-to-another-repository@v1.7.2
        if: ${{ env.DEPLOY_TO_REPOSITORY == 'true' && github.actor == github.repository_owner }}
        with:
          source-directory: tmp
          destination-github-username: ${{ env.DESTINATION_REPOSITORY_USERNAME }}
          destination-repository-name: ${{ env.DESTINATION_REPOSITORY_NAME }}
          user-name: ${{ github.actor }}
          user-email: ${{ github.actor }}@users.noreply.github.com
          create-target-branch-if-needed: true
          target-branch: main
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}

      - name: Cleanup
        if: ${{ always() }}
        run: |
          rm -rf kernels.zip || :
          rm -rf kernels.7z || :
          rm -rf tmp || :
          exit 0

